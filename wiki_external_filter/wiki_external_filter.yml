development: &development
  plantuml:
    description: "Constructs UML diagram image from its textual description in PlantUML language, see http://plantuml.sourceforge.net"
    template: image
    outputs:
      - command: "/usr/bin/plantuml -pipe"
        content_type: "image/png"
        prolog: "@startuml"
        epilog: "@enduml"
  graphviz:
    description: "Constructs graph image from its textual description in DOT language, see http://www.graphviz.org"
    template: svg
    outputs:
      - command: "/usr/bin/dot -Tsvg"
        content_type: "image/svg+xml"
      - command: "/usr/bin/dot -Tpng"
        content_type: "image/png"
  ritex:
    description: "Converts WebTeX expression to MathML, see http://ritex.rubyforge.org/"
    template: svg
    outputs:
      - command: "(echo '<!DOCTYPE math PUBLIC \"-//W3C//DTD MathML 2.0//EN\" \"http://www.w3.org/Math/DTD/mathml2/mathml2.dtd\">'; /usr/bin/ritex) | xmllint --noent --nonet --catalogs --loaddtd - | sed 's/^<!DOCTYPE.\\+$//' | /usr/bin/math2svg"
        content_type: "image/svg+xml"
  video:
    description: "Converts video file given by its filename to FLV and displays it via Flowplayer"
    template: flash-video
    replace_attachments: true
    outputs:
      - command: "xargs -I{} ffmpeg -i {} -vframes 1 -f mjpeg -"
        content_type: "image/jpeg"
        # We have to use temporary file as otherwise ffmpeg is unable to inject
        # metadata.
      - command: "FN=`cat`; if [ `echo ${FN##*.} | tr [:upper:] [:lower:]` != 'flv' ]; then TMPVIDEO=`tempfile --directory=/var/tmp`; ffmpeg -y -i $FN -sameq -ar 44100 -f flv $TMPVIDEO; STATUS=$?; cat $TMPVIDEO; rm $TMPVIDEO; exit $STATUS; else cat $FN; fi"
        content_type: "video/x-flv"
  video_url:
    description: "Converts video file given by its URL to FLV and displays it via Flowplayer"
    template: flash-video
    outputs:
      - command: "wget -i - -O - | ffmpeg -i - -vframes 1 -f mjpeg -"
        content_type: "image/jpeg"
        # We have to use temporary file as otherwise ffmpeg is unable to inject
        # metadata.
      - command: "FN=`cat`; wget $FN -O - | (if [ `echo ${FN##*.} | tr [:upper:] [:lower:]` != 'flv' ]; then TMPVIDEO=`tempfile --directory=/var/tmp`; ffmpeg -y -i - -sameq -ar 44100 -f flv $TMPVIDEO; STATUS=$?; cat $TMPVIDEO; rm $TMPVIDEO; exit $STATUS; else cat; fi)"
        content_type: "video/x-flv"
  fortune:
    description: "Prints a random, hopefully interesting, adage, see http://en.wikipedia.org/wiki/Fortune_(Unix)"
    template: text
    cache_seconds: 0
    outputs:
      - command: "/usr/bin/fortune"
        content_type: "text/plain"
  blockdiag:
    description: "Constructs block-diagram image from its textual description in blockdiag language, see http://tk0miya.bitbucket.org/blockdiag/build/html/index.html"
    template: svg
    outputs:
      - command: "/usr/bin/blockdiag -Tsvg -o/dev/stdout /dev/stdin"
        content_type: "image/svg+xml"
      - command: "/usr/bin/blockdiag -Tpng -f /usr/share/fonts/japanese/TrueType/sazanami-gothic.ttf -a -o/dev/stdout /dev/stdin"
        content_type: "image/png"

test:
  type: mock

production:
  <<: *development
